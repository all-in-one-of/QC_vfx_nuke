# Tool Name: Bc_LightAim
# Version: 1.1
# Created For: Bc_ToolSet v1.1
# Developer: Parimal Desai
# Website: www.parimalvfx.com

Gizmo {
 help "Tool Name: <b>Bc_LightAim</b>\nVersion: <b>1.1</b>\nCreated For: <b>Bc_ToolSet v1.1</b> \nDeveloper: <b>Parimal Desai</b>\nWebsite: <b>www.parimalvfx.com</b>"
 tile_color 0x7f7f7fff
 lock_connections true
 addUserKnob {20 Bc_LightAim_tab l Bc_LightAim}
 addUserKnob {20 group_light l Light n 1}
 addUserKnob {41 light_type l "light type" t "The light type can be point, \ndirectional, or spot. The falloff\ntype is enabled for point and\nspot lights. The cone angle, cone\npenumbra angle and cone falloff\nknobs are enabled for spot light." T Light.light_type}
 addUserKnob {41 color T Light.color}
 addUserKnob {41 intensity T Light.intensity}
 addUserKnob {41 cone_angle l "cone angle" T Light.cone_angle}
 addUserKnob {41 cone_penumbra_angle l "cone penumbra angle" T Light.cone_penumbra_angle}
 addUserKnob {41 cone_falloff l "cone falloff" T Light.cone_falloff}
 addUserKnob {41 falloff_type l "falloff type" t "Light falloff type controls how much light \nthe object gets from the light source. It is\nbased on the distance between the light\nsource and the object. A linear type will\ndiminish the light at a fixed rate as it\ntravels from the object. Quadratic and\nCubic types will diminish the light at an\nexponential rate." T Light.falloff_type}
 addUserKnob {26 ""}
 addUserKnob {41 display t "How to draw in 3D \npreview. The viewer can\noverride this setting." T Light.display}
 addUserKnob {41 selectable -STARTLINE T Light.selectable}
 addUserKnob {41 xform_order l "transform order" t "Specifies the order to apply the transformations in. \nOptions are:\nSRT Scale/Rotation/Translation\nSTR Scale/Translation/Rotation\nRST Rotation/Scale/Translation\nRTS Rotation/Translation/Scale\nTSR Translation/Scale/Rotation\nTRS Translation/Rotation/Scale" T Light.xform_order}
 addUserKnob {41 translate T Light.translate}
 addUserKnob {41 scaling l scale T Light.scaling}
 addUserKnob {41 uniform_scale l "uniform scale" T Light.uniform_scale}
 addUserKnob {41 skew T Light.skew}
 addUserKnob {41 pivot T Light.pivot}
 addUserKnob {20 group_light_end l endGroup n -1}
 addUserKnob {20 group_aim l Aim n 1}
 group_aim 0
 addUserKnob {41 display_1 l display t "How to draw in 3D \npreview. The viewer can\noverride this setting." T Aim.display}
 addUserKnob {41 selectable_1 l selectable -STARTLINE T Aim.selectable}
 addUserKnob {41 file_menu l " " T Aim.file_menu}
 addUserKnob {41 snap_menu l " " -STARTLINE T Aim.snap_menu}
 addUserKnob {41 xform_order_1 l "transform order" t "Specifies the order to apply the transformations in. \nOptions are:\nSRT Scale/Rotation/Translation\nSTR Scale/Translation/Rotation\nRST Rotation/Scale/Translation\nRTS Rotation/Translation/Scale\nTSR Translation/Scale/Rotation\nTRS Translation/Rotation/Scale" T Aim.xform_order}
 addUserKnob {41 rot_order l "rotation order" t "Specifies the order to \napply euler angles to the\nrotation." T Aim.rot_order}
 addUserKnob {41 translate_1 l translate T Aim.translate}
 addUserKnob {41 rotate T Aim.rotate}
 addUserKnob {41 scaling_1 l scale T Aim.scaling}
 addUserKnob {41 uniform_scale_1 l "uniform scale" T Aim.uniform_scale}
 addUserKnob {41 skew_1 l skew T Aim.skew}
 addUserKnob {41 pivot_1 l pivot T Aim.pivot}
 addUserKnob {20 group_aim_end l endGroup n -1}
 addUserKnob {20 group_global l Global n 1}
 group_global 0
 addUserKnob {41 display_2 l display t "How to draw in 3D \npreview. The viewer can\noverride this setting." T Global.display}
 addUserKnob {41 selectable_2 l selectable -STARTLINE T Global.selectable}
 addUserKnob {41 file_menu_1 l " " T Global.file_menu}
 addUserKnob {41 snap_menu_1 l " " -STARTLINE T Global.snap_menu}
 addUserKnob {41 xform_order_2 l "transform order" t "Specifies the order to apply the transformations in. \nOptions are:\nSRT Scale/Rotation/Translation\nSTR Scale/Translation/Rotation\nRST Rotation/Scale/Translation\nRTS Rotation/Translation/Scale\nTSR Translation/Scale/Rotation\nTRS Translation/Rotation/Scale" T Global.xform_order}
 addUserKnob {41 rot_order_1 l "rotation order" t "Specifies the order to \napply euler angles to the\nrotation." T Global.rot_order}
 addUserKnob {41 translate_2 l translate T Global.translate}
 addUserKnob {41 rotate_1 l rotate T Global.rotate}
 addUserKnob {41 scaling_2 l scale T Global.scaling}
 addUserKnob {41 uniform_scale_2 l "uniform scale" T Global.uniform_scale}
 addUserKnob {41 skew_2 l skew T Global.skew}
 addUserKnob {41 pivot_2 l pivot T Global.pivot}
 addUserKnob {20 "" l "Local matrix" n 2}
 addUserKnob {41 useMatrix l "specify matrix" T Global.useMatrix}
 addUserKnob {41 matrix l "" +STARTLINE T Global.matrix}
 addUserKnob {20 "" n -1}
 addUserKnob {20 "" l "World matrix" n 2}
 addUserKnob {41 world_matrix l "" -STARTLINE T Global.world_matrix}
 addUserKnob {20 "" n -1}
 addUserKnob {20 group_global_end l endGroup n -1}
 addUserKnob {26 support l "@b;Support"}
 addUserKnob {22 documentation l Documentation T "import os\nimport webbrowser\nimport nuke\n\ndoc = False\nfor search in nuke.pluginPath():\n    docPath = os.path.dirname(search) + \"/documentation/Bc_LightAimv10Nuke678v11Nuke910.html\"\n    if os.path.exists(docPath):\n        webbrowser.open(\"file:///\" + docPath)\n        doc = True\n        break\n\nif doc is False:\n    if nuke.ask(\"Bc_ToolSet documentation not found in expected installation directory. Click on 'Yes' to access online \"\n                \"Bc_ToolSet documentation.\"):\n        webbrowser.open(\"http://bit.ly/PrSuiteDocumentation\")\n" +STARTLINE}
 addUserKnob {22 tutorial l Tutorial -STARTLINE T "import webbrowser\nwebbrowser.open(\"http://bit.ly/PrLightAimv1_0Tut\")"}
 addUserKnob {22 report_bug l "Report Bug" -STARTLINE T "import webbrowser\nwebbrowser.open(\"http://bit.ly/PrSuiteReportBug\")"}
 addUserKnob {22 check_updates l "Check for Updates" -STARTLINE T "import webbrowser\nwebbrowser.open(\"http://www.parimalvfx.com/rnd/Bc_ToolSet/Bc_LightAim/\")"}
 addUserKnob {20 Shadows_tab l Shadows}
 addUserKnob {41 cast_shadows l "cast shadows" T Light.cast_shadows}
 addUserKnob {41 shadow_mode l "shadow mode" t "Select the shadow casting mode:<ul><li>solid - Objects seen from light are considered fully solid.</li><li>clipped alpha - Objects casting shadows with an alpha below the clipping threshold knob allow light to pass. All other alpha values fully occlude the light.</li><li>full alpha - Shadow is calculated considering how light is attenuated passing through non opaque occluders.</li></ul>" T Light.shadow_mode}
 addUserKnob {41 filter t "Impulse no filtering - each output pixel equals some input pixel \nCubic smooth interpolation between pixels\nKeys cubic a=.50, approximates sync (*)\nSimon cubic a=.75, continuous 2nd derivative (*)\nRifman cubic a=1.0, lots of sharpening (*)\nMitchell mix of sharpening and smoothing (*+)\nParzen approximating B-spline (+)\nNotch hides moir&#233; patterns (+)\nLanczos4 good for scaling down (*)\nLanczos6 good for scaling down with some sharpening (*)\nSinc4 good for scaling down with a lot of sharpening (*)\nNearest fastest and crudest, sample the nearest texel from the appropriate mipmap level (%)\nBilinear remove blockiness, sample and interpolate the four nearest texels from the appropriate \nmipmap level (%)\nTrilinear smooth interpolation of texture quality according to the distance, bilinearly interpolate \nbetween two closest mipmap levels (%)\nAnisotropic highest quality filtering, gives a better result when shading surfaces with a high angle \nrelative to the camera (%)\n(*) has negative lobes, can produce values that are outside the range of the input pixels.\n(+) not interpolatory, changes pixels even when no movement\n(%) constant time filter independent from the requested sampling area. It generates at rendering \ntime mip map levels and could have performance impact when the texture is changing over time." T Light.filter}
 addUserKnob {41 scene_epsilon l "scene epsilon" T Light.scene_epsilon}
 addUserKnob {41 samples T Light.samples}
 addUserKnob {41 sample_width l "sample width" T Light.sample_width}
 addUserKnob {41 depthmap_bias l bias T Light.depthmap_bias}
 addUserKnob {41 depthmap_slope_bias l "slope bias" T Light.depthmap_slope_bias}
 addUserKnob {41 clipping_threshold l "clipping threshold" T Light.clipping_threshold}
 addUserKnob {41 shadow_jitter_scale l "jitter scale" T Light.shadow_jitter_scale}
 addUserKnob {41 depthmap_width l "depthmap resolution" T Light.depthmap_width}
 addUserKnob {41 shadow_mask l "output mask" t "Output the shadow mask into \nthis channel. The mask output\ncan be enabled even if cast\nshadows is not enabled." T Light.shadow_mask}
 addUserKnob {26 gp1 l "" +STARTLINE T " "}
 addUserKnob {26 shadow_test l "" +STARTLINE T "Casting shadows from a point light type is not \ncurrently supported in the ScanlineRender node."}
 addUserKnob {20 Help_tab l Help}
 addUserKnob {26 h1 l "" +STARTLINE T "<font color='grey' size='7'><b>Pr_</b>LightAim</font><font color='grey' size='4'> v1.1 (for Nuke 9, 10)</font>"}
 addUserKnob {26 gp2 l "" +STARTLINE T " "}
 addUserKnob {26 h2 l "" +STARTLINE T "<font color='white'><b>Light with a Aim.</b></font>"}
 addUserKnob {26 gp3 l "" +STARTLINE T " "}
 addUserKnob {20 h3 l "Getting Started" n 1}
 h3 0
 addUserKnob {26 h4 l "" +STARTLINE T "<font color='grey' size='7'><b>Step</b>By<b>Step</b></font>"}
 addUserKnob {26 h5 l "" +STARTLINE T "<p></p><font color='lightgreen'>\n<p><b>#Step 1:</b> Move aim where light is focused to look.</p>\n<p><b>#Step 2:</b> Gobal will help to control the transformation</p>\n<p>of rig. By default Global is not selectable and display is set</p>\n<p>to off, turn on both to use Global.</p></font>\n<p></p>\n<font color='yellow'><b><i>For more information and help follow support on main tab.</i></b></font>"}
 addUserKnob {20 h3_end l endGroup n -1}
 addUserKnob {26 gp4 l "" +STARTLINE T "\n\n"}
}
 Input {
  inputs 0
  name Input
  xpos 180
  ypos -34
 }
 Axis2 {
  display off
  selectable false
  name Global
  selected true
  xpos 190
  ypos 66
 }
set N3aba400 [stack 0]
 Axis2 {
  translate {0 0 5}
  uniform_scale 1.5
  name Aim
  xpos 300
  ypos 162
 }
push $N3aba400
 Light2 {
  inputs 2
  light_type spot
  depthmap_slope_bias 0.01
  name Light
  xpos 190
  ypos 162
 }
 Output {
  name Output1
  xpos 180
  ypos 302
 }
end_group
